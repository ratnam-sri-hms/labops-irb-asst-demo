{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:canvas", "browser-external:zlib", "browser-external:http", "browser-external:https", "browser-external:url", "webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition", "webpack://pdfjs-dist/build/pdf/src/shared/util.js", "webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js", "webpack://pdfjs-dist/build/pdf/src/shared/is_node.js", "webpack://pdfjs-dist/build/pdf/src/display/api.js", "webpack://pdfjs-dist/build/pdf/src/display/display_utils.js", "webpack://pdfjs-dist/build/pdf/src/display/base_factory.js", "webpack://pdfjs-dist/build/pdf/src/display/font_loader.js", "webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js", "webpack://pdfjs-dist/build/pdf/src/shared/murmurhash3.js", "webpack://pdfjs-dist/build/pdf/src/display/canvas.js", "webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js", "webpack://pdfjs-dist/build/pdf/src/shared/image_utils.js", "webpack://pdfjs-dist/build/pdf/src/display/worker_options.js", "webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js", "webpack://pdfjs-dist/build/pdf/src/display/metadata.js", "webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js", "webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js", "webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js", "webpack://pdfjs-dist/build/pdf/src/display/node_utils.js", "webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js", "webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js", "webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js", "webpack://pdfjs-dist/build/pdf/src/display/text_layer.js", "webpack://pdfjs-dist/build/pdf/src/display/svg.js", "webpack://pdfjs-dist/build/pdf/src/display/node_stream.js", "webpack://pdfjs-dist/build/pdf/src/display/network_utils.js", "webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js", "webpack://pdfjs-dist/build/pdf/src/display/network.js", "webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js", "webpack://pdfjs-dist/build/pdf/webpack/bootstrap", "webpack://pdfjs-dist/build/pdf/src/pdf.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"canvas\" has been externalized for browser compatibility. Cannot access \"canvas.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, () => {\nreturn ", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = __non_webpack_require__(\n      \"dommatrix/dist/dommatrix.js\"\n    );\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream = __non_webpack_require__(\n      \"web-streams-polyfill/dist/ponyfill.js\"\n    ).ReadableStream;\n  })();\n\n  // Support: Firefox<94, Chrome<98, Safari<15.4, Node.js<17.0.0\n  (function checkStructuredClone() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `structuredClone`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.structuredClone) {\n      return;\n    }\n    require(\"core-js/web/structured-clone.js\");\n  })();\n}\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nlet DefaultCanvasFactory = DOMCanvasFactory;\nlet DefaultCMapReaderFactory = DOMCMapReaderFactory;\nlet DefaultStandardFontDataFactory = DOMStandardFontDataFactory;\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n  const {\n    NodeCanvasFactory,\n    NodeCMapReaderFactory,\n    NodeStandardFontDataFactory,\n  } = require(\"./node_utils.js\");\n\n  DefaultCanvasFactory = NodeCanvasFactory;\n  DefaultCMapReaderFactory = NodeCMapReaderFactory;\n  DefaultStandardFontDataFactory = NodeStandardFontDataFactory;\n}\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type {IPDFStreamFactory}\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) {\n    params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE;\n  }\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.cMapUrl !== \"string\") {\n    params.cMapUrl = null;\n  }\n  if (typeof params.standardFontDataUrl !== \"string\") {\n    params.standardFontDataUrl = null;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts = !isNodeJS && !params.disableFontFace;\n  }\n  if (\n    typeof params.ownerDocument !== \"object\" ||\n    params.ownerDocument === null\n  ) {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._bitmaps = new Set();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n    this._bitmaps.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n    this._bitmaps.clear();\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    const event = {\n      data: structuredClone(obj, transfers),\n    };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts = new WeakMap();\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker.#workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker.#workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this.#workerPorts.has(params.port)) {\n      return this.#workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationHash = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        annotationHash = this.annotationStorage.hash;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationHash}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this._passwordCapability.reject(password);\n          } else {\n            this._passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { bitmap, width, height } = imageData;\n              length = width * height * 4;\n              pageProxy._bitmaps.add(bitmap);\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_STORE) {\n              pageProxy.cleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    const obj = this.#objs[objId];\n    if (obj) {\n      return obj;\n    }\n    return (this.#objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.#canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.#canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport { BaseException, stringToBytes, Util, warn } from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this._storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this._storage.get(key);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get hash() {\n    const hash = new MurmurHash3_64();\n\n    for (const [key, value] of this._storage) {\n      hash.update(`${key}:${JSON.stringify(value)}`);\n    }\n    return hash.hexdigest();\n  }\n}\n\nexport { AnnotationStorage };\n", "/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    const hex1 = (h1 >>> 0).toString(16),\n      hex2 = (h2 >>> 0).toString(16);\n    return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n  }\n}\n\nexport { MurmurHash3_64 };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { applyMaskImageData } from \"../shared/image_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  if (ctx._transformStack) {\n    // Reset the transform stack.\n    ctx._transformStack = [];\n  }\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    if (this._transformStack.length === 0) {\n      warn(\"Tried to restore a ctx when the stack was already empty.\");\n    }\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = ctx.mozCurrentTransform;\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (\n    !COMPILE_TYPE3_GLYPHS ||\n    width > MAX_SIZE_TO_COMPILE ||\n    height > MAX_SIZE_TO_COMPILE\n  ) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  let path, outlines, coords;\n  if (!isNodeJS) {\n    path = new Path2D();\n  } else {\n    outlines = [];\n  }\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n\n    if (path) {\n      path.moveTo(p % width1, i);\n    } else {\n      coords = [p % width1, i];\n    }\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      if (path) {\n        path.lineTo(p % width1, (p / width1) | 0);\n      } else {\n        coords.push(p % width1, (p / width1) | 0);\n      }\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n\n    if (!path) {\n      outlines.push(coords);\n    }\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    if (path) {\n      c.fill(path);\n    } else {\n      c.beginPath();\n      for (const o of outlines) {\n        c.moveTo(o[0], o[1]);\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n      c.fill();\n    }\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = applyMaskImageData({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx, foregroundColor) {\n  ctx.strokeStyle = ctx.fillStyle = foregroundColor || \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.backgroundColor = pageColors?.background || null;\n    this.foregroundColor = pageColors?.foreground || null;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const defaultBackgroundColor = background || \"#ffffff\";\n    this.ctx.save();\n\n    if (this.foregroundColor && this.backgroundColor) {\n      // Get the #RRGGBB value of the color. If it's a name (e.g. CanvasText)\n      // then it'll be converted to its rgb value.\n      this.ctx.fillStyle = this.foregroundColor;\n      const fg = (this.foregroundColor = this.ctx.fillStyle);\n      this.ctx.fillStyle = this.backgroundColor;\n      const bg = (this.backgroundColor = this.ctx.fillStyle);\n      let isValidDefaultBg = true;\n      let defaultBg = defaultBackgroundColor;\n\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        this.ctx.fillStyle = defaultBackgroundColor;\n        defaultBg = this.ctx.fillStyle;\n        isValidDefaultBg =\n          typeof defaultBg === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(defaultBg);\n      }\n\n      if (\n        (fg === \"#000000\" && bg === \"#ffffff\") ||\n        fg === bg ||\n        !isValidDefaultBg\n      ) {\n        // Ignore the `pageColors`-option when:\n        //  - The computed background/foreground colors have their default\n        //    values, i.e. white/black.\n        //  - The computed background/foreground colors are identical,\n        //    since that'd render the `canvas` mostly blank.\n        //  - The `background`-option has a value that's incompatible with\n        //    the `pageColors`-values.\n        //\n        this.foregroundColor = this.backgroundColor = null;\n      } else {\n        // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n        //\n        // Relative luminance:\n        // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n        //\n        // We compute the rounded luminance of the default background color.\n        // Then for every color in the pdf, if its rounded luminance is the\n        // same as the background one then it's replaced by the new\n        // background color else by the foreground one.\n        const cB = parseInt(defaultBg.slice(1), 16);\n        const rB = (cB && 0xff0000) >> 16;\n        const gB = (cB && 0x00ff00) >> 8;\n        const bB = cB && 0x0000ff;\n        const newComp = x => {\n          x /= 255;\n          return x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n        };\n        const lumB = Math.round(\n          0.2126 * newComp(rB) + 0.7152 * newComp(gB) + 0.0722 * newComp(bB)\n        );\n        this.selectColor = (r, g, b) => {\n          const lumC =\n            0.2126 * newComp(r) + 0.7152 * newComp(g) + 0.0722 * newComp(b);\n          return Math.round(lumC) === lumB ? bg : fg;\n        };\n      }\n    }\n\n    this.ctx.fillStyle = this.backgroundColor || defaultBackgroundColor;\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        /* trackTransform */ true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx, this.foregroundColor);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight,\n        /* trackTransform */ false\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = ctx.mozCurrentTransform;\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets.\n      // TODO: handle the case of a pattern fill if it's possible.\n      const withoutTranslation = currentTransform.slice(0, 4);\n      cacheKey = JSON.stringify(\n        isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        fillCtx.mozCurrentTransformInverse\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking = null;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking = null;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = ctx.mozCurrentTransform;\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10,\n      /* trackTransform */ false\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(this.ctx.mozCurrentTransform, bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        const viewportScaleFactorStr = `var(--zoom-factor) * ${PixelsPerInch.PDF_TO_CSS_UNITS}`;\n        canvas.style.width = `calc(${width}px * ${viewportScaleFactorStr})`;\n        canvas.style.height = `calc(${height}px * ${viewportScaleFactorStr})`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n      } else {\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n\n    const [rWidth, rHeight] = drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: rWidth,\n        height: rHeight,\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      w,\n      h,\n      /* trackTransform */ false\n    );\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = this.ctx.mozCurrentTransform;\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (!this._cachedScaleForStroking) {\n      const { lineWidth } = this.current;\n      const m = this.ctx.mozCurrentTransform;\n      let scaleX, scaleY;\n\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        const normX = Math.abs(m[0]);\n        const normY = Math.abs(m[3]);\n        if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[1]);\n        const normY = Math.hypot(m[2], m[3]);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking = [scaleX, scaleY];\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    let savedMatrix, savedDashes, savedDashOffset;\n    if (saveRestore) {\n      savedMatrix = ctx.mozCurrentTransform.slice();\n      savedDashes = ctx.getLineDash().slice();\n      savedDashOffset = ctx.lineDashOffset;\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    const scale = Math.max(scaleX, scaleY);\n    ctx.setLineDash(ctx.getLineDash().map(x => x / scale));\n    ctx.lineDashOffset /= scale;\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.setTransform(...savedMatrix);\n      ctx.setLineDash(savedDashes);\n      ctx.lineDashOffset = savedDashOffset;\n    }\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || isNodeJS) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(graphics.ctx.mozCurrentTransform, [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n", "/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest } from \"./util.js\";\n\nfunction applyMaskImageData({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n  inverseDecode = false,\n}) {\n  const opaque = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = !inverseDecode ? [opaque, 0] : [0, opaque];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nexport { applyMaskImageData };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n", "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let { width, height } = getRectDims(data.rect);\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        action({ detail, target: element });\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      const textContent = storedData.formattedValue || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        valueOnFocus: \"\",\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n          elementData.valueOnFocus = event.target.value;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.valueOnFocus === value) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (this._mouseState.isDown && elementData.valueOnFocus !== value) {\n            // Focus out using the mouse: data are committed\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    this._setDefaultPropertiesFromJS(container);\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event, /* isExport */ true) });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      const { width, height } = getRectDims(data.rect);\n      if (width <= 0 || height <= 0) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n", "/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n", "/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {DocumentFragment} container - The DOM node that will contain the\n *   text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        const scale = textDivProperties.canvasWidth / width;\n        if (this._enhanceTextSelection) {\n          textDivProperties.scale = scale;\n        }\n        transform = `scaleX(${scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const createObjectURL = function (\n    data,\n    contentType = \"\",\n    forceDataSchema = false\n  ) {\n    if (\n      URL.createObjectURL &&\n      typeof Blob !== \"undefined\" &&\n      !forceDataSchema\n    ) {\n      return URL.createObjectURL(new Blob([data], { type: contentType }));\n    }\n    // Blob/createObjectURL is not available, falling back to data schema.\n    const digits =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (typeof glyph === \"number\") {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  loadScript,\n  LoopbackPort,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  renderTextLayer,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"],
  "mappings": "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",
  "names": ["exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "__w_pdfjs_require__", "IDENTITY_MATRIX", "FONT_IDENTITY_MATRIX", "RenderingIntentFlag", "ANY", "DISPLAY", "PRINT", "ANNOTATIONS_FORMS", "ANNOTATIONS_STORAGE", "ANNOTATIONS_DISABLE", "OPLIST", "AnnotationMode", "DISABLE", "ENABLE", "ENABLE_FORMS", "ENABLE_STORAGE", "PermissionFlag", "MODIFY_CONTENTS", "COPY", "MODIFY_ANNOTATIONS", "FILL_INTERACTIVE_FORMS", "COPY_FOR_ACCESSIBILITY", "ASSEMBLE", "PRINT_HIGH_QUALITY", "TextRenderingMode", "FILL", "STROKE", "FILL_STROKE", "INVISIBLE", "FILL_ADD_TO_PATH", "STROKE_ADD_TO_PATH", "FILL_STROKE_ADD_TO_PATH", "ADD_TO_PATH", "FILL_STROKE_MASK", "ADD_TO_PATH_FLAG", "ImageKind", "GRAYSCALE_1BPP", "RGB_24BPP", "RGBA_32BPP", "AnnotationType", "TEXT", "LINK", "FREETEXT", "LINE", "SQUARE", "CIRCLE", "POLYGON", "POLYLINE", "HIGHLIGHT", "UNDERLINE", "SQUIGGLY", "STRIKEOUT", "STAMP", "CARET", "INK", "POPUP", "FILEATTACHMENT", "SOUND", "MOVIE", "WIDGET", "SCREEN", "PRINTERMARK", "TRAPNET", "WATERMARK", "THREED", "REDACT", "AnnotationStateModelType", "MARKED", "REVIEW", "AnnotationMarkedState", "UNMARKED", "AnnotationReviewState", "ACCEPTED", "REJECTED", "CANCELLED", "COMPLETED", "NONE", "AnnotationReplyType", "GROUP", "REPLY", "AnnotationFlag", "HIDDEN", "NOZOOM", "NOROTATE", "NOVIEW", "READONLY", "LOCKED", "TOGGLENOVIEW", "LOCKEDCONTENTS", "AnnotationFieldFlag", "REQUIRED", "NOEXPORT", "MULTILINE", "PASSWORD", "NOTOGGLETOOFF", "RADIO", "PUSHBUTTON", "COMBO", "EDIT", "SORT", "FILESELECT", "MULTISELECT", "DONOTSPELLCHECK", "DONOTSCROLL", "COMB", "RICHTEXT", "RADIOSINUNISON", "COMMITONSELCHANGE", "AnnotationBorderStyleType", "SOLID", "DASHED", "BEVELED", "INSET", "AnnotationActionEventType", "E", "X", "D", "U", "Fo", "Bl", "PO", "PC", "PV", "PI", "K", "F", "V", "C", "DocumentActionEventType", "WC", "WS", "DS", "WP", "DP", "PageActionEventType", "O", "StreamType", "UNKNOWN", "FLATE", "LZW", "DCT", "JPX", "JBIG", "A85", "AHX", "CCF", "RLX", "FontType", "TYPE1", "TYPE1STANDARD", "TYPE1C", "CIDFONTTYPE0", "CIDFONTTYPE0C", "TRUETYPE", "CIDFONTTYPE2", "TYPE3", "OPENTYPE", "TYPE0", "MMTYPE1", "VerbosityLevel", "ERRORS", "WARNINGS", "INFOS", "CMapCompressionType", "BINARY", "STREAM", "OPS", "dependency", "setLineWidth", "setLineCap", "setLineJoin", "setMiterLimit", "setDash", "setRenderingIntent", "setFlatness", "setGState", "save", "restore", "transform", "moveTo", "lineTo", "curveTo", "curveTo2", "curveTo3", "closePath", "rectangle", "stroke", "closeStroke", "fill", "eoFill", "fillStroke", "eoFillStroke", "closeFillStroke", "closeEOFillStroke", "endPath", "clip", "eoClip", "beginText", "endText", "setCharSpacing", "setWordSpacing", "setHScale", "setLeading", "setFont", "setTextRenderingMode", "setTextRise", "moveText", "setLeadingMoveText", "setTextMatrix", "nextLine", "showText", "showSpacedText", "nextLineShowText", "nextLineSetSpacingShowText", "setCharWidth", "setCharWidthAndBounds", "setStrokeColorSpace", "setFillColorSpace", "setStrokeColor", "setStrokeColorN", "setFillColor", "setFillColorN", "setStrokeGray", "setFillGray", "setStrokeRGBColor", "setFillRGBColor", "setStrokeCMYKColor", "setFillCMYKColor", "shadingFill", "beginInlineImage", "beginImageData", "endInlineImage", "paintXObject", "markPoint", "markPointProps", "beginMarkedContent", "beginMarkedContentProps", "endMarkedContent", "beginCompat", "endCompat", "paintFormXObjectBegin", "paintFormXObjectEnd", "beginGroup", "endGroup", "beginAnnotations", "endAnnotations", "beginAnnotation", "endAnnotation", "paintJpegXObject", "paintImageMaskXObject", "paintImageMaskXObjectGroup", "paintImageXObject", "paintInlineImageXObject", "paintInlineImageXObjectGroup", "paintImageXObjectRepeat", "paintImageMaskXObjectRepeat", "paintSolidColorImageMask", "constructPath", "UNSUPPORTED_FEATURES", "unknown", "forms", "javaScript", "signatures", "smask", "shadingPattern", "font", "errorTilingPattern", "errorExtGState", "errorXObject", "errorFontLoadType3", "errorFontState", "errorFontMissing", "errorFontTranslate", "errorColorSpace", "errorOperatorList", "errorFontToUnicode", "errorFontLoadNative", "errorFontBuildPath", "errorFontGetPath", "errorMarkedContent", "errorContentSubStream", "PasswordResponses", "NEED_PASSWORD", "INCORRECT_PASSWORD", "verbosity", "setVerbosityLevel", "level", "Number", "isInteger", "getVerbosityLevel", "info", "msg", "console", "log", "warn", "unreachable", "Error", "assert", "cond", "_isValidProtocol", "url", "protocol", "createValidAbsoluteUrl", "baseUrl", "options", "addDefaultProtocol", "startsWith", "dots", "match", "length", "tryConvertEncoding", "stringToUTF8String", "ex", "absoluteUrl", "URL", "shadow", "obj", "prop", "value", "Object", "defineProperty", "enumerable", "configurable", "writable", "BaseException", "BaseExceptionClosure", "message", "name", "constructor", "prototype", "PasswordException", "code", "UnknownErrorException", "details", "InvalidPDFException", "MissingPDFException", "UnexpectedResponseException", "status", "FormatError", "AbortException", "bytesToString", "bytes", "undefined", "MAX_ARGUMENT_COUNT", "String", "fromCharCode", "apply", "strBuf", "i", "chunkEnd", "Math", "min", "chunk", "subarray", "push", "join", "stringToBytes", "str", "Uint8Array", "charCodeAt", "arrayByteLength", "arr", "byteLength", "arraysToBytes", "resultLength", "pos", "data", "item", "itemLength", "set", "string32", "objectSize", "keys", "objectFromMap", "map", "create", "key", "isLittleEndian", "buffer8", "view32", "Uint32Array", "buffer", "isEvalSupported", "Function", "e", "FeatureTest", "isOffscreenCanvasSupported", "OffscreenCanvas", "hexNumbers", "Array", "n", "toString", "padStart", "Util", "makeHexColor", "r", "g", "b", "scaleMinMax", "minMax", "temp", "m1", "m2", "applyTransform", "p", "m", "xt", "yt", "applyInverseTransform", "d", "getAxialAlignedBoundingBox", "p1", "p2", "slice", "p3", "p4", "max", "inverseTransform", "apply3dTransform", "v", "singularValueDecompose2dScale", "transpose", "a", "c", "first", "second", "sqrt", "sx", "sy", "normalizeRect", "rect", "intersect", "rect1", "rect2", "xLow", "xHigh", "yLow", "yHigh", "bezierBoundingBox", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "tvalues", "bounds", "t", "t1", "t2", "b2ac", "sqrtb2ac", "abs", "j", "mt", "jlen", "PDFStringTranslateTable", "stringToPDFString", "encoding", "decoder", "TextDecoder", "fatal", "decode", "ii", "charAt", "escapeString", "replace", "isAscii", "test", "stringToUTF16BEString", "buf", "char", "decodeURIComponent", "escape", "utf8StringToString", "unescape", "encodeURIComponent", "isArrayBuffer", "isArrayEqual", "arr1", "arr2", "getModificationDate", "date", "Date", "getUTCFullYear", "getUTCMonth", "getUTCDate", "getUTCHours", "getUTCMinutes", "getUTCSeconds", "createPromiseCapability", "capability", "isSettled", "get", "promise", "Promise", "resolve", "reject", "reason", "_is_node", "isNodeJS", "process", "versions", "nw", "electron", "type", "DEFAULT_RANGE_CHUNK_SIZE", "RENDERING_CANCELLED_TIMEOUT", "DefaultCanvasFactory", "DOMCanvasFactory", "DefaultCMapReaderFactory", "DOMCMapReaderFactory", "DefaultStandardFontDataFactory", "DOMStandardFontDataFactory", "NodeCanvasFactory", "NodeCMapReaderFactory", "NodeStandardFontDataFactory", "require", "createPDFNetworkStream", "setPDFNetworkStreamFactory", "pdfNetworkStreamFactory", "getDocument", "src", "task", "PDFDocumentLoadingTask", "source", "PDFDataRangeTransport", "range", "params", "rangeTransport", "worker", "window", "location", "href", "Buffer", "isNaN", "CMapReaderFactory", "StandardFontDataFactory", "ignoreErrors", "stopAtErrors", "fontExtraProperties", "pdfBug", "enableXfa", "rangeChunkSize", "docBaseUrl", "isDataScheme", "maxImageSize", "cMapUrl", "standardFontDataUrl", "useWorkerFetch", "disableFontFace", "useSystemFonts", "ownerDocument", "globalThis", "document", "disableRange", "disableStream", "disableAutoFetch", "workerParams", "port", "GlobalWorkerOptions", "workerPort", "PDFWorker", "fromPort", "_worker", "docId", "then", "destroyed", "workerIdPromise", "_fetchDocument", "networkStreamPromise", "networkStream", "PDFDataTransportStream", "initialData", "progressiveDone", "contentDispositionFilename", "httpHeaders", "withCredentials", "all", "workerId", "messageHandler", "MessageHandler", "transport", "WorkerTransport", "_transport", "send", "catch", "_capability", "pdfDataRangeTransport", "sendWithPromise", "apiVersion", "password", "onPassword", "onProgress", "onUnsupportedFeature", "destroy", "_a", "_rangeListeners", "_progressListeners", "_progressiveReadListeners", "_progressiveDoneListeners", "_readyCapability", "addRangeListener", "listener", "addProgressListener", "addProgressiveReadListener", "addProgressiveDoneListener", "onDataRange", "begin", "onDataProgress", "loaded", "total", "onDataProgressiveRead", "onDataProgressiveDone", "transportReady", "requestDataRange", "end", "abort", "PDFDocumentProxy", "pdfInfo", "_pdfInfo", "deprecated", "fingerprints", "stats", "streamTypes", "fontTypes", "annotationStorage", "numPages", "isPureXfa", "_htmlForXfa", "allXfaHtml", "getPage", "pageNumber", "getPageIndex", "ref", "getDestinations", "getDestination", "id", "getPageLabels", "getPageLayout", "getPageMode", "getViewerPreferences", "getOpenAction", "getAttachments", "getJavaScript", "getJSActions", "getDocJSActions", "getOutline", "getOptionalContentConfig", "getPermissions", "getMetadata", "getMarkInfo", "getData", "getDownloadInfo", "downloadInfoCapability", "cleanup", "keepLoadedFonts", "startCleanup", "loadingTask", "loadingParams", "saveDocument", "size", "getFieldObjects", "hasJSActions", "getCalculationOrderIds", "PDFPageProxy", "pageIndex", "pageInfo", "_pageIndex", "_pageInfo", "_ownerDocument", "_stats", "StatTimer", "_pdfBug", "commonObjs", "objs", "PDFObjects", "_bitmaps", "Set", "cleanupAfterRender", "pendingCleanup", "_intentStates", "Map", "_annotationPromises", "rotate", "userUnit", "view", "getViewport", "scale", "rotation", "offsetX", "offsetY", "dontFlip", "PageViewport", "viewBox", "getAnnotations", "intent", "intentArgs", "getRenderingIntent", "cacheKey", "renderingIntent", "annotations", "annotation", "titleObj", "contentsObj", "_jsActionsPromise", "getPageJSActions", "getXfa", "children", "render", "canvasContext", "viewport", "annotationMode", "imageLayer", "canvasFactory", "background", "optionalContentConfigPromise", "annotationCanvasMap", "pageColors", "arguments", "renderInteractiveForms", "includeAnnotationStorage", "time", "intentState", "streamReaderCancelTimeout", "clearTimeout", "canvasFactoryInstance", "intentPrint", "displayReadyCapability", "operatorList", "fnArray", "argsArray", "lastChunk", "_pumpOperatorList", "complete", "error", "renderTasks", "delete", "internalRenderTask", "_tryCleanup", "_abortOperatorList", "timeEnd", "InternalRenderTask", "callback", "useRequestAnimationFrame", "add", "renderTask", "transparency", "optionalContentConfig", "initializeGraphics", "operatorListChanged", "getOperatorList", "opListReadCapability", "opListTask", "streamTextContent", "disableCombineTextItems", "includeMarkedContent", "TEXT_CONTENT_CHUNK_SIZE", "sendWithStream", "combineTextItems", "highWaterMark", "textContent", "items", "getTextContent", "xfa", "XfaText", "readableStream", "pump", "reader", "read", "done", "assign", "styles", "getReader", "getStructTree", "_structTreePromise", "_destroy", "waitOn", "values", "force", "completed", "cancel", "clear", "bitmap", "close", "resetStats", "_startRenderPage", "_renderPageChunk", "operatorListChunk", "serializable", "streamReader", "RenderingCancelledException", "setTimeout", "curCacheKey", "curIntentState", "LoopbackPort", "_listeners", "_deferred", "postMessage", "transfers", "event", "structuredClone", "call", "addEventListener", "removeEventListener", "indexOf", "splice", "terminate", "PDFWorkerUtil", "isWorkerDisabled", "fallbackWorkerSrc", "fakeWorkerId", "__non_webpack_require__", "pdfjsFilePath", "currentScript", "isSameOrigin", "otherUrl", "base", "origin", "other", "createCDNWrapper", "wrapper", "createObjectURL", "Blob", "workerPorts", "has", "_port", "_webWorker", "_messageHandler", "_initializeFromPort", "_initialize", "on", "Worker", "_mainThreadWorkerMessageHandler", "workerSrc", "terminateEarly", "onWorkerError", "_setupFakeWorker", "sendTest", "testObj", "_setupFakeWorkerGlobal", "WorkerMessageHandler", "workerHandler", "setup", "pdfjsWorker", "loader", "mainWorkerMessageHandler", "eval", "loadScript", "WeakMap", "getWorkerSrc", "docStats", "pageCache", "pagePromises", "metadataPromise", "fontLoader", "FontLoader", "_onUnsupportedFeature", "bind", "styleElement", "_params", "isCompressed", "cMapPacked", "destroyCapability", "_passwordCapability", "_networkStream", "_fullReader", "_lastProgress", "setupMessageHandler", "AnnotationStorage", "isOpList", "annotationHash", "hash", "page", "hasOwnProperty", "resetModified", "terminated", "_getFieldObjectsPromise", "_hasJSActionsPromise", "cancelAllRequests", "sink", "getFullReader", "evt", "onPull", "enqueue", "onCancel", "ready", "readyReason", "headersCapability", "fullReader", "headersReady", "isStreamingSupported", "isRangeSupported", "contentLength", "rangeReader", "getRangeReader", "_numPages", "htmlForXfa", "exception", "updatePassword", "exportedData", "exportedError", "fontRegistry", "FontInspector", "enabled", "registerFont", "fontAdded", "FontFaceObject", "finally", "imageData", "pageProxy", "MAX_IMAGE_SIZE_TO_STORE", "width", "height", "freeze", "fetch", "featureId", "cachedPromise", "num", "gen", "filename", "results", "OptionalContentConfig", "metadata", "Metadata", "cleanupSuccessful", "objId", "ensureObj", "settled", "RenderTask", "_internalRenderTask", "onContinue", "operatorListIdx", "running", "graphicsReadyCallback", "graphicsReady", "_useRequestAnimationFrame", "cancelled", "_cancelBound", "_continueBound", "_continue", "_scheduleNextBound", "_scheduleNext", "_nextBound", "_next", "_canvas", "canvas", "canvasInUse", "StepperManager", "stepper", "init", "nextBreakPoint", "getNextBreakPoint", "gfx", "CanvasGraphics", "beginDrawing", "endDrawing", "updateOperatorList", "requestAnimationFrame", "executeOperatorList", "WeakSet", "version", "build", "_util", "SVG_NS", "PixelsPerInch", "CSS", "PDF", "PDF_TO_CSS_UNITS", "BaseCanvasFactory", "_document", "_createCanvas", "createElement", "fetchData", "asTypedArray", "isValidFetchUrl", "baseURI", "response", "ok", "statusText", "arrayBuffer", "text", "request", "XMLHttpRequest", "open", "responseType", "onreadystatechange", "readyState", "DONE", "responseText", "BaseCMapReaderFactory", "_fetchData", "compressionType", "cMapData", "BaseStandardFontDataFactory", "DOMSVGFactory", "BaseSVGFactory", "_createSVG", "createElementNS", "centerX", "centerY", "rotateA", "rotateB", "rotateC", "rotateD", "offsetCanvasX", "offsetCanvasY", "clone", "convertToViewportPoint", "x", "y", "convertToViewportRectangle", "topLeft", "bottomRight", "convertToPdfPoint", "trim", "substring", "toLowerCase", "isPdfFile", "getFilenameFromUrl", "anchor", "query", "lastIndexOf", "getPdfFilenameFromUrl", "defaultFilename", "reURI", "reFilename", "splitURI", "exec", "suggestedFilename", "includes", "started", "times", "now", "start", "outBuf", "longest", "duration", "padEnd", "removeScriptElement", "script", "onload", "remove", "onerror", "head", "documentElement", "appendChild", "pdfDateStringRegex", "PDFDateString", "toDateObject", "input", "RegExp", "matches", "year", "parseInt", "month", "day", "hour", "minute", "universalTimeRelation", "offsetHour", "offsetMinute", "UTC", "getXfaPageViewport", "xfaPage", "attributes", "style", "context", "getContext", "reset", "canvasAndContext", "svg", "setAttribute", "BaseFontLoader", "nativeFontFaces", "addNativeFontFace", "nativeFontFace", "fonts", "insertRule", "rule", "getElementsByTagName", "styleSheet", "sheet", "cssRules", "attached", "missingFile", "isFontLoadingAPISupported", "createNativeFontFace", "family", "createFontFaceRule", "isSyncFontLoadingSupported", "_queueLoadingCallback", "_prepareFontLoadEvent", "hasFonts", "_loadTestFont", "rules", "fontsToLoad", "GenericFontLoader", "loadingContext", "requests", "nextRequestId", "loadTestFontId", "supported", "navigator", "userAgent", "completeRequest", "otherRequest", "shift", "getLoadTestFont", "atob", "int32", "offset", "spliceString", "s", "insert", "chunk1", "chunk2", "ctx", "called", "isFontReady", "fillText", "getImageData", "COMMENT_OFFSET", "CFF_CHECKSUM_OFFSET", "XXXX_VALUE", "checksum", "btoa", "names", "loadedName", "div", "visibility", "position", "top", "left", "span", "fontFamily", "body", "translatedData", "compiledGlyphs", "cssFontInfo", "FontFace", "css", "weight", "fontWeight", "italicAngle", "mimetype", "getPathGenerator", "character", "cmds", "jsBuf", "current", "args", "cmd", "_storage", "_modified", "onSetModified", "onResetModified", "getValue", "defaultValue", "getRawValue", "setValue", "modified", "entry", "val", "entries", "_setModified", "getAll", "MurmurHash3_64", "update", "JSON", "stringify", "hexdigest", "SEED", "MASK_HIGH", "MASK_LOW", "seed", "h1", "h2", "blockCounts", "tailLength", "dataUint32", "k1", "k2", "C1", "C2", "C1_LOW", "C2_LOW", "hex1", "hex2", "_display_utils", "MIN_FONT_SIZE", "MAX_FONT_SIZE", "MAX_GROUP_SIZE", "EXECUTION_TIME", "EXECUTION_STEPS", "COMPILE_TYPE3_GLYPHS", "MAX_SIZE_TO_COMPILE", "FULL_CHUNK_HEIGHT", "LINEWIDTH_SCALE_FACTOR", "mirrorContextOperations", "destCtx", "_removeMirroring", "__originalSave", "__originalRestore", "__originalRotate", "__originalScale", "__originalTranslate", "translate", "__originalTransform", "__originalSetTransform", "setTransform", "__originalResetTransform", "resetTransform", "__originalClip", "__originalMoveTo", "__originalLineTo", "__originalBezierCurveTo", "bezierCurveTo", "__originalRect", "__originalClosePath", "__originalBeginPath", "beginPath", "ctxSave", "ctxRestore", "ctxTranslate", "ctxScale", "ctxTransform", "f", "ctxSetTransform", "ctxResetTransform", "ctxRotate", "angle", "cp1x", "cp1y", "cp2x", "cp2y", "addContextCurrentTransform", "_transformStack", "mozCurrentTransform", "_originalSave", "_originalRestore", "_originalRotate", "_originalScale", "_originalTranslate", "_originalTransform", "_originalSetTransform", "_originalResetTransform", "_transformMatrix", "desc", "getOwnPropertyDescriptor", "getPrototypeOf", "_setLineWidth", "_getLineWidth", "getLineWidth", "_", "getCurrentTransform", "getCurrentTransformInverse", "ad_bc", "bc_ad", "old", "prev", "pop", "cosValue", "cos", "sinValue", "sin", "CachedCanvases", "cache", "getCanvas", "trackTransform", "canvasEntry", "drawImageAtIntegerCoords", "srcImg", "srcX", "srcY", "srcW", "srcH", "destX", "destY", "destW", "destH", "tx", "ty", "tlX", "rTlX", "round", "tlY", "rTlY", "brX", "rWidth", "brY", "rHeight", "sign", "drawImage", "scaleX", "hypot", "scaleY", "compileType3Glyph", "imgData", "POINT_TO_PROCESS_LIMIT", "POINT_TYPES", "width1", "points", "j0", "lineSize", "elem", "mask", "count", "sum", "steps", "Int32Array", "path", "outlines", "coords", "Path2D", "p0", "step", "pp", "drawOutline", "o", "l", "ll", "CanvasExtraState", "alphaIsShape", "fontSize", "fontSizeScale", "textMatrix", "textMatrixScale", "fontMatrix", "leading", "lineX", "lineY", "charSpacing", "wordSpacing", "textHScale", "textRenderingMode", "textRise", "fillColor", "strokeColor", "patternFill", "fillAlpha", "strokeAlpha", "lineWidth", "activeSMask", "transferMaps", "startNewPathAndClipBox", "clipBox", "setCurrentPoint", "updatePathMinMax", "minX", "minY", "maxX", "maxY", "updateRectMinMax", "updateScalingPathMinMax", "updateCurvePathMinMax", "box", "getPathBoundingBox", "pathType", "PathType", "xStrokePad", "yStrokePad", "updateClipFromPath", "isEmptyClip", "Infinity", "getClippedPathBoundingBox", "putBinaryImageData", "ImageData", "putImageData", "partialChunkHeight", "fullChunks", "totalChunks", "chunkImgData", "createImageData", "srcPos", "destPos", "dest", "thisChunkHeight", "elemsInThisChunk", "transferMapRed", "transferMapGreen", "transferMapBlue", "transferMapGray", "kind", "srcLength", "dest32", "dest32DataLength", "fullSrcDiff", "white", "black", "srcDiff", "k", "kEnd", "kEndUnrolled", "srcByte", "hasTransferMaps", "putBinaryImageMask", "applyMaskImageData", "copyCtxState", "sourceCtx", "properties", "property", "setLineDash", "getLineDash", "lineDashOffset", "resetCtxToDefault", "foregroundColor", "strokeStyle", "fillStyle", "fillRule", "globalAlpha", "lineCap", "lineJoin", "miterLimit", "globalCompositeOperation", "composeSMaskBackdrop", "r0", "g0", "b0", "alpha", "alpha_", "composeSMaskAlpha", "maskData", "layerData", "transferMap", "composeSMaskLuminosity", "genericComposeSMask", "maskCtx", "layerCtx", "subtype", "backdrop", "layerOffsetX", "layerOffsetY", "maskOffsetX", "maskOffsetY", "hasBackdrop", "composeFn", "PIXELS_TO_PROCESS", "chunkSize", "ceil", "row", "chunkHeight", "composeSMask", "layerBox", "layerWidth", "layerHeight", "getImageSmoothingEnabled", "interpolate", "fround", "actualScale", "devicePixelRatio", "LINE_CAP_STYLES", "LINE_JOIN_STYLES", "NORMAL_CLIP", "EO_CLIP", "canvasCtx", "stateStack", "pendingClip", "pendingEOFill", "res", "xobjs", "groupStack", "processingType3", "baseTransform", "baseTransformStack", "groupLevel", "smaskStack", "smaskCounter", "tempSMask", "suspendedCtx", "contentVisible", "markedContentStack", "cachedCanvases", "cachedPatterns", "viewportScale", "outputScaleX", "outputScaleY", "backgroundColor", "foreground", "_cachedScaleForStroking", "_cachedGetSinglePixelWidth", "_cachedBitmapsMap", "getObject", "fallback", "defaultBackgroundColor", "fg", "bg", "isValidDefaultBg", "defaultBg", "cB", "rB", "gB", "bB", "newComp", "lumB", "selectColor", "lumC", "fillRect", "transparentCanvas", "compositeCtx", "beginLayout", "executionStartIdx", "continueCallback", "argsArrayLen", "chunkOperations", "endTime", "fnId", "breakIt", "depObjId", "objsPool", "inSMaskMode", "HTMLCanvasElement", "endLayout", "_scaleImage", "img", "widthScale", "heightScale", "paintWidth", "paintHeight", "tmpCanvasId", "tmpCanvas", "tmpCtx", "newWidth", "newHeight", "clearRect", "_createMaskCanvas", "isPatternFill", "currentTransform", "scaled", "maskCanvas", "mainKey", "withoutTranslation", "cachedImage", "maskToCanvas", "cord1", "cord2", "drawnWidth", "drawnHeight", "fillCanvas", "fillCtx", "mozCurrentTransformInverse", "imageSmoothingEnabled", "inverse", "getPattern", "limit", "dashArray", "dashPhase", "flatness", "states", "state", "checkSMaskState", "beginSMaskMode", "endSMaskMode", "cacheId", "scratchCanvas", "compose", "dirtyBox", "floor", "ops", "startX", "startY", "isScalingMatrix", "minMaxForBezier", "xw", "yh", "consumePath", "rescaleAndStroke", "needRestore", "paths", "pendingTextPaths", "addToPath", "spacing", "fontRefName", "fontObj", "fontDirection", "isType3Font", "bold", "italic", "typeface", "fallbackName", "browserFontSize", "mode", "rise", "paintChar", "patternTransform", "fillStrokeMode", "isAddToPathSet", "strokeText", "isFontSubpixelAAEnabled", "glyphs", "showType3Text", "glyphsLength", "vertical", "spacingDir", "defaultVMetrics", "widthAdvanceScale", "simpleFillText", "pattern", "getSinglePixelWidth", "glyph", "restoreNeeded", "isSpace", "fontChar", "accent", "scaledX", "scaledY", "vmetric", "vx", "vy", "remeasure", "measuredWidth", "measureText", "characterScaleX", "isInFont", "scaledAccentX", "scaledAccentY", "charWidth", "isTextInvisible", "spacingLength", "charProcOperatorList", "operatorListId", "transformed", "xWidth", "yWidth", "llx", "lly", "urx", "ury", "getColorN_Pattern", "IR", "color", "canvasGraphicsFactory", "createCanvasGraphics", "TilingPattern", "_getPattern", "matrix", "getShadingPattern", "SHADING", "inv", "bl", "br", "ul", "ur", "bbox", "isArray", "group", "currentCtx", "isolated", "knockout", "canvasBounds", "groupCtx", "startTransformInverse", "currentMtx", "hasOwnCanvas", "canvasWidth", "canvasHeight", "annotationCanvas", "viewportScaleFactorStr", "savedCtx", "compiled", "skewX", "skewY", "positions", "trans", "images", "image", "w", "h", "imgToPaint", "HTMLElement", "getCanvasPosition", "appendImage", "tag", "visible", "isVisible", "isContentVisible", "isEmpty", "absDet", "normX", "normY", "getScaleForStroking", "scaledXLineWidth", "scaledYLineWidth", "baseArea", "saveRestore", "savedMatrix", "savedDashes", "savedDashOffset", "op", "applyBoundingBox", "region", "BaseShadingPattern", "RadialAxialShadingPattern", "_type", "_bbox", "_colorStops", "_p0", "_p1", "_r0", "_r1", "_createGradient", "grad", "createLinearGradient", "createRadialGradient", "colorStop", "addColorStop", "owner", "ownerBBox", "createPattern", "domMatrix", "DOMMatrix", "drawTriangle", "c1", "c2", "c3", "colors", "rowSize", "tmp", "c1r", "c1g", "c1b", "c2r", "c2g", "c2b", "c3r", "c3g", "c3b", "xa", "car", "cag", "cab", "xb", "cbr", "cbg", "cbb", "x1_", "x2_", "drawFigure", "figure", "ps", "cs", "verticesPerRow", "rows", "cols", "q", "MeshShadingPattern", "_coords", "_colors", "_figures", "_bounds", "_background", "_createMeshCanvas", "combinedScale", "EXPECTED_SCALE", "MAX_PATTERN_SIZE", "BORDER_SIZE", "boundsWidth", "boundsHeight", "paddedWidth", "paddedHeight", "matrixScale", "temporaryPatternCanvas", "DummyShadingPattern", "PaintType", "COLORED", "UNCOLORED", "xstep", "ystep", "paintType", "tilingType", "createPatternCanvas", "curMatrixScale", "dimx", "getSizeAndScale", "dimy", "graphics", "setFillAndStrokeStyleToContext", "adjustedX0", "adjustedY0", "adjustedX1", "adjustedY1", "clipBbox", "realOutputSize", "maxSize", "bboxWidth", "bboxHeight", "cssColor", "inverseDecode", "opaque", "zeroMapping", "oneMapping", "widthInSource", "widthRemainder", "CallbackKind", "DATA", "ERROR", "StreamKind", "CANCEL", "CANCEL_COMPLETE", "CLOSE", "ENQUEUE", "PULL", "PULL_COMPLETE", "START_COMPLETE", "wrapReason", "sourceName", "targetName", "comObj", "callbackId", "streamId", "streamSinks", "streamControllers", "callbackCapabilities", "actionHandler", "_onComObjOnMessage", "stream", "_processStreamMessage", "action", "cbSourceName", "cbTargetName", "result", "_createStreamSink", "actionName", "handler", "ah", "queueingStrategy", "ReadableStream", "controller", "startCapability", "startCall", "pullCall", "cancelCall", "isClosed", "desiredSize", "pull", "pullCapability", "cancelCapability", "self", "streamSink", "isCancelled", "lastDesiredSize", "sinkCapability", "success", "streamController", "_deleteStreamController", "allSettled", "parsedData", "rawData", "metadataMap", "getRaw", "OptionalContentGroup", "creator", "_order", "_groups", "order", "groups", "baseState", "off", "_evaluateVisibilityExpression", "array", "operator", "element", "expression", "policy", "ids", "setVisibility", "getOrder", "from", "getGroups", "getGroup", "_queuedChunks", "_progressiveDone", "_contentDispositionFilename", "_pdfDataRangeTransport", "_isStreamingSupported", "_isRangeSupported", "_contentLength", "_fullRequestReader", "_rangeReaders", "_onReceiveData", "_onProgress", "_onProgressiveDone", "_enqueue", "found", "some", "_begin", "_progressiveDataLength", "_loaded", "firstReader", "_removeRangeReader", "queuedChunks", "PDFDataTransportStreamReader", "PDFDataTransportStreamRangeReader", "_stream", "_done", "_filename", "_requests", "_headersReady", "requestCapability", "_end", "_queuedChunk", "requestsCapability", "output", "walk", "node", "shouldBuildText", "child", "fs", "readFile", "Canvas", "createCanvas", "_annotation_storage", "DEFAULT_TAB_INDEX", "GetElementsByNameSet", "getRectDims", "AnnotationElementFactory", "parameters", "annotationType", "LinkAnnotationElement", "TextAnnotationElement", "fieldType", "TextWidgetAnnotationElement", "radioButton", "RadioButtonWidgetAnnotationElement", "checkBox", "CheckboxWidgetAnnotationElement", "PushButtonWidgetAnnotationElement", "ChoiceWidgetAnnotationElement", "WidgetAnnotationElement", "PopupAnnotationElement", "FreeTextAnnotationElement", "LineAnnotationElement", "SquareAnnotationElement", "CircleAnnotationElement", "PolylineAnnotationElement", "CaretAnnotationElement", "InkAnnotationElement", "PolygonAnnotationElement", "HighlightAnnotationElement", "UnderlineAnnotationElement", "SquigglyAnnotationElement", "StrikeOutAnnotationElement", "StampAnnotationElement", "FileAttachmentAnnotationElement", "AnnotationElement", "isRenderable", "ignoreBorder", "createQuadrilaterals", "layer", "linkService", "downloadManager", "imageResourcesPath", "renderForms", "svgFactory", "enableScripting", "_fieldObjects", "fieldObjects", "_mouseState", "mouseState", "container", "_createContainer", "quadrilaterals", "_createQuadrilaterals", "transformOrigin", "borderStyle", "borderWidth", "horizontalRadius", "horizontalCornerRadius", "verticalRadius", "verticalCornerRadius", "radius", "borderRadius", "borderBottomStyle", "borderColor", "_commonActions", "setColor", "jsName", "styleName", "detail", "target", "ColorConverters", "display", "hidden", "print", "focus", "preventScroll", "userName", "title", "readonly", "removeAttribute", "required", "bgColor", "fgColor", "textColor", "_dispatchEventFromSandbox", "actions", "jsEvent", "commonActions", "_setDefaultPropertiesFromJS", "storedData", "quadPoints", "savedRect", "quadPoint", "_createPopup", "trigger", "popupElement", "PopupElement", "modificationDate", "richText", "hideWrapper", "popup", "_renderQuadrilaterals", "className", "quadrilateral", "_getElementsByName", "skipId", "fields", "fieldObj", "exportValues", "exportValue", "domElement", "getElementById", "getElementsByName", "platform", "isWin", "isMac", "isTooltipOnly", "resetForm", "Action", "link", "addLinkAttributes", "newWindow", "_bindNamedAction", "_bindLink", "hasClickAction", "_bindJSAction", "_bindResetFormAction", "index", "linkElement", "cloneNode", "destination", "getDestinationHash", "onclick", "goToDestination", "getAnchorUrl", "executeNamedAction", "eventBus", "dispatch", "otherClickAction", "resetFormFields", "refs", "resetFormRefs", "include", "allFields", "fieldIds", "fieldName", "field", "storage", "allIds", "dispatchEvent", "Event", "hasPopup", "alt", "dataset", "l10nId", "l10nArgs", "alternativeText", "_getKeyModifier", "ctrlKey", "metaKey", "_setEventListener", "baseName", "eventName", "valueGetter", "shiftKey", "modifier", "_setEventListeners", "getter", "_setBackgroundColor", "hasAppearance", "fieldValue", "setPropertyOnSiblings", "keyInStorage", "formattedValue", "elementData", "userValue", "valueOnFocus", "multiLine", "disabled", "readOnly", "tabIndex", "defaultFieldValue", "blurListener", "scrollLeft", "activeElement", "selRange", "setSelectionRange", "commitKey", "willCommit", "selStart", "selectionStart", "selEnd", "selectionEnd", "_blurListener", "isDown", "Keystroke", "inputType", "preventDefault", "change", "maxLen", "maxLength", "comb", "fieldWidth", "combWidth", "classList", "letterSpacing", "verticalAlign", "_setTextStyle", "TEXT_ALIGNMENT", "fontColor", "defaultAppearanceData", "textAlignment", "textAlign", "checked", "checkbox", "curChecked", "buttonValue", "radio", "pdfButtonValue", "fontSizeStyle", "selectElement", "combo", "multiSelect", "multiple", "option", "selected", "optionElement", "displayValue", "isExport", "selectedIndex", "filter", "getItems", "multipleSelection", "findIndex", "insertBefore", "indices", "editable", "changeEx", "keyDown", "IGNORE_TYPES", "parentType", "selector", "parentId", "parentElements", "querySelectorAll", "parentRect", "popupLeft", "popupTop", "pinned", "BACKGROUND_ENLIGHT", "hideElement", "dir", "dateObject", "toLocaleDateString", "toLocaleTimeString", "XfaLayer", "xfaHtml", "html", "lastChild", "contents", "_formatContents", "_toggle", "_show", "_hide", "lines", "split", "line", "createTextNode", "pin", "zIndex", "unpin", "lineCoordinates", "append", "square", "circle", "containerClassName", "svgElementName", "coordinate", "vertices", "polyline", "inkList", "inkLists", "content", "file", "_download", "openOrDownloadData", "AnnotationLayer", "sortedAnnotations", "popupAnnotations", "rendered", "renderedElement", "prepend", "setAnnotationCanvasMap", "ownMatrix", "elements", "ownTransform", "querySelector", "firstChild", "nodeName", "replaceChild", "makeColorComp", "CMYK_G", "G_CMYK", "G_RGB", "G_HTML", "G", "RGB_G", "RGB_HTML", "R", "B", "T_HTML", "CMYK_RGB", "CMYK_HTML", "components", "RGB_CMYK", "_xfa_text", "setupStorage", "xfaOn", "xfaOff", "getAttribute", "setAttributes", "isHTMLAnchorElement", "HTMLAnchorElement", "dataId", "root", "rootHtml", "stack", "rootDiv", "textDivs", "parent", "childHtml", "xmlns", "el", "MAX_TEXT_DIVS_TO_RENDER", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_ASCENT", "ascentCache", "AllWhitespaceRegexp", "getAscent", "cachedAscent", "metrics", "ascent", "fontBoundingBoxAscent", "descent", "fontBoundingBoxDescent", "ratio", "pixels", "appendText", "geom", "textDiv", "textDivProperties", "_enhanceTextSelection", "hasText", "hasEOL", "originalTransform", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "_textDivs", "_viewport", "atan2", "fontName", "fontHeight", "fontAscent", "_fontInspectorEnabled", "shouldScaleText", "absScaleX", "absScaleY", "_textDivProperties", "_textContentStream", "_layoutText", "angleCos", "angleSin", "divWidth", "divHeight", "right", "bottom", "_canceled", "textDivsLength", "_renderingDone", "findPositiveMin", "ts", "expand", "expanded", "expandBounds", "divProperties", "Float64Array", "jj", "boxScale", "boxes", "x1New", "x2New", "expandBoundsLTR", "sort", "fakeBoundary", "horizon", "boundary", "horizonPart", "affectedBoundary", "maxXNew", "xNew", "changedHorizon", "lastBoundary", "useBoundary", "unshift", "used", "concat", "TextLayerRenderTask", "textContentStream", "textContentItemsStr", "enhanceTextSelection", "_textContent", "_container", "_textContentItemsStr", "_reader", "_layoutTextLastFontSize", "_layoutTextLastFontFamily", "_layoutTextCtx", "_renderTimer", "_processItems", "styleCache", "len", "parentNode", "_render", "timeout", "textItems", "textStyles", "expandTextDivs", "expandDivs", "transformBuf", "paddingBuf", "divProps", "padding", "renderTextLayer", "renderParameters", "SVGGraphics", "opListToTree", "opList", "opTree", "opListElement", "fn", "pf", "toFixed", "pm", "acos", "SVG_DEFAULTS", "fontStyle", "XML_NS", "XLINK_NS", "contentType", "forceDataSchema", "digits", "b1", "b2", "b3", "d1", "d2", "d3", "d4", "convertImgDataToPng", "PNG_HEADER", "CHUNK_WRAPPER_SIZE", "crcTable", "crc32", "crc", "writePngChunk", "adler32", "deflateSync", "literals", "deflateSyncUncompressed", "maxBlockLength", "deflateBlocks", "idat", "pi", "adler", "encode", "isMask", "bitDepth", "colorType", "offsetLiterals", "offsetBytes", "ihdr", "pngLength", "SVGExtraState", "dependencies", "activeClipUrl", "clipGroup", "maskId", "clipCount", "maskCount", "shadingCount", "transformMatrix", "transformStack", "extraStack", "embedFonts", "embeddedFonts", "cssStyle", "_operatorIdMapping", "tgrp", "executeOpTree", "loadDependencies", "getSVG", "svgElement", "convertOpList", "operatorIdMapping", "opTreeElement", "lineMatrix", "xcoords", "ycoords", "tspan", "setAttributeNS", "txtElement", "txtgrp", "lineWidthScale", "_setStrokeAttributes", "_ensureTransformGroup", "addFontStyle", "defs", "hasChildNodes", "setStrokeAlpha", "setFillAlpha", "_makeColorN_Pattern", "_makeShadingPattern", "_makeTilingPattern", "tilingId", "tx0", "ty0", "tx1", "ty1", "xscale", "yscale", "txstep", "tystep", "tiling", "childNodes", "shadingId", "colorStops", "gradient", "point0", "point1", "focalPoint", "circlePoint", "focalRadius", "circleRadius", "stop", "getAttributeNS", "clipId", "clipPath", "clipElement", "imgSrc", "cliprect", "imgEl", "definitions", "rootGroup", "_ensureClipGroup", "http", "https", "fileUriRegex", "parseUrl", "sourceUrl", "parsedUrl", "parse", "host", "PDFNodeStream", "isHttp", "isFsUrl", "_rangeRequestReaders", "PDFNodeStreamFsFullReader", "PDFNodeStreamFullReader", "PDFNodeStreamFsRangeReader", "PDFNodeStreamRangeReader", "BaseFullReader", "_url", "_storedError", "_disableRange", "_rangeChunkSize", "_readableStream", "_readCapability", "_headersCapability", "_error", "_setReadableStream", "BaseRangeReader", "createRequestOptions", "headers", "auth", "hostname", "method", "handleResponse", "statusCode", "getResponseHeader", "allowRangeRequests", "suggestedLength", "validateRangeRequestCapabilities", "extractFilenameFromHeader", "_request", "_httpHeaders", "Range", "lstat", "stat", "createReadStream", "returnValues", "contentEncoding", "contentDisposition", "getFilenameFromContentDispositionHeader", "createResponseStatusError", "validateResponseStatus", "needsEncodingFixup", "toParamRegExp", "rfc2616unquote", "rfc5987decode", "rfc2047decode", "fixupEncoding", "rfc2231getparam", "attributePattern", "flags", "textdecode", "contentDispositionStr", "iter", "quot", "part", "parts", "quotindex", "extvalue", "encodingend", "langvalue", "charset", "hex", "OK_RESPONSE", "PARTIAL_CONTENT_RESPONSE", "getArrayBuffer", "xhr", "NetworkManager", "getXhr", "NetworkManager_getXhr", "currXhrId", "pendingRequests", "requestRange", "listeners", "requestFull", "xhrId", "pendingRequest", "setRequestHeader", "expectedStatus", "onError", "onStateChange", "onprogress", "onHeadersReceived", "onDone", "xhrStatus", "ok_response_on_range_request", "rangeHeader", "getRequestXhr", "isPendingRequest", "abortRequest", "PDFNetworkStream", "_source", "_manager", "_onRangeRequestReaderClosed", "PDFNetworkStreamFullRequestReader", "PDFNetworkStreamRangeRequestReader", "onClosed", "manager", "_onHeadersReceived", "_onDone", "_onError", "_fullRequestId", "_headersReceivedCapability", "_cachedChunks", "fullRequestXhrId", "fullRequestXhr", "lengthComputable", "_requestId", "_close", "createFetchOptions", "abortController", "signal", "credentials", "redirect", "createHeaders", "Headers", "PDFFetchStream", "PDFFetchStreamReader", "PDFFetchStreamRangeReader", "_withCredentials", "AbortController", "_abortController", "_headers", "module", "_worker_options", "pdfjsVersion", "pdfjsBuild"]
}
